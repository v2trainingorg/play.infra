name: Deploy Certificate-Infrastructure

on: [workflow_dispatch]

jobs:
  install-emissary-ingress:
    runs-on: ubuntu-latest
    
    permissions: 
      id-token: write 
      contents: read

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Kubernetes
        uses: azure/setup-kubectl@v1

      - name: Set up Helm
        uses: azure/setup-helm@v1

      - name: Azure Login
        uses: Azure/login@v1
        with:
            # ClientId of the Azure Service principal created.
            client-id: ${{secrets.SERVICE_PRINCIPAL_CLIENT_ID}}
            # TenantId of the Azure Service principal created.
            tenant-id: ${{secrets.TENANT_ID}}
            # Azure subscriptionId
            subscription-id: ${{secrets.SUBSCRIPTION_ID}}  

      - name: Set AKS context
        run: az aks get-credentials --name ${{ secrets.APP_NAME }} --resource-group ${{ secrets.APP_NAME }}     

      - name: Create namespace 
        run: |
          kubectl create namespace cert-manager || echo "Namespace already exists"
 

      - name: Install Cert-Manager
        run: |
          kubectl apply -f https://github.com/cert-manager/cert-manager/releases/download/v1.16.2/cert-manager.yaml
         
      - name: Create Cluster Issuer
        run: |
          namespace="cert-manager" 
          kubectl apply -f ./cert-manager/cluster-issuer.yaml -n $namespace
          kubectl apply -f ./cert-manager/acme-challenge.yaml -n $namespace

      - name: Create TLS Cert
        run: |
          namespace="cert-manager"
          kubectl apply -f ./emissary-ingress/tls-certificate.yaml -n $namespace

      - name: Enable TLS and HTTPS
        run: |
          namespace="cert-manager"
          kubectl apply -f ./emissary-ingress/tls-certificate.yaml -n $namespace
          kubectl apply -f ./emissary-ingress/host.yaml -n $namespace
      
      
