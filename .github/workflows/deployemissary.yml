name: Deploy Emissary-ingress

on: [workflow_dispatch]

jobs:
  install-emissary-ingress:
    runs-on: ubuntu-latest
    
    permissions: 
      id-token: write 
      contents: read
      
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Kubernetes
        uses: azure/setup-kubectl@v1

      - name: Set up Helm
        uses: azure/setup-helm@v1

      - name: Azure Login
        uses: Azure/login@v1
        with:
            # ClientId of the Azure Service principal created.
            client-id: ${{secrets.SERVICE_PRINCIPAL_CLIENT_ID}}
            # TenantId of the Azure Service principal created.
            tenant-id: ${{secrets.TENANT_ID}}
            # Azure subscriptionId
            subscription-id: ${{secrets.SUBSCRIPTION_ID}}  

      - name: Set AKS context
        run: az aks get-credentials --name ${{ secrets.APP_NAME }} --resource-group ${{ secrets.APP_NAME }}

      - name: Ensure Helm config directory
        run: |
          mkdir -p ~/.config/helm/repository/cache
          mkdir -p ~/.config/helm/repository/local
          touch ~/.config/helm/repository/repositories.yaml
          echo "apiVersion: v1" > ~/.config/helm/repository/repositories.yaml
          echo "generated: $(date -u +"%Y-%m-%dT%H:%M:%SZ")" >> ~/.config/helm/repository/repositories.yaml
          echo "repositories:" >> ~/.config/helm/repository/repositories.yaml

      - name: Debug Helm config
        run: |
          echo "Helm repositories.yaml content:"
          cat ~/.config/helm/repository/repositories.yaml
       
      - name: Remove existing helm repo 
        run: helm repo remove datawire || echo "Repo not found, continuing"  
        env:
          HELM_CONFIG_HOME: ~/.config/helm
          HELM_CACHE_HOME: ~/.cache/helm
          
      - name: Add Helm repo
        run: |
          helm repo add datawire https://app.getambassador.io
        env:
          HELM_CONFIG_HOME: ~/.config/helm
          HELM_CACHE_HOME: ~/.cache/helm
          
      - name: Refresh Helm Repositories 
        run: helm repo update

      - name: Print Helm Repository Config 
        run: cat ~/.helm/repository/repositories.yaml

      - name: Apply Emissary CRDs
        run: |
          kubectl apply -f https://app.getambassador.io/yaml/emissary/3.3.0/emissary-crds.yaml
          kubectl wait --timeout=90s --for=condition=available deployment emissary-apiext -n emissary-system

      - name: Install Emissary-ingress
        run: |
          namespace="emissary"
          appname="${{ secrets.APP_NAME }}"
          helm install emissary-ingress datawire/emissary-ingress --set service.annotations."service\.beta\.kubernetes\.io/azure-dns-label-name"=$appname -n $namespace --create-namespace
          kubectl rollout status deployment/emissary-ingress -n $namespace -w

      - name: Configure Emissary-ingress routing
        run: |
          namespace="emissary"
          kubectl apply -f ./emissary-ingress/listener.yaml -n $namespace
          kubectl apply -f ./emissary-ingress/mappings.yaml -n $namespace
