name: Deploy Emissary-ingress

on: [workflow_dispatch]

jobs:
  install-emissary-ingress:
    runs-on: ubuntu-latest
    
    permissions: 
      id-token: write 
      contents: read
      
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Kubernetes
        uses: azure/setup-kubectl@v1

      - name: Azure Login
        uses: Azure/login@v1
        with:
            # ClientId of the Azure Service principal created.
            client-id: ${{secrets.SERVICE_PRINCIPAL_CLIENT_ID}}
            # TenantId of the Azure Service principal created.
            tenant-id: ${{secrets.TENANT_ID}}
            # Azure subscriptionId
            subscription-id: ${{secrets.SUBSCRIPTION_ID}}  

      - name: Set AKS context
        run: az aks get-credentials --name ${{ secrets.APP_NAME }} --resource-group ${{ secrets.APP_NAME }}     

      - name: Create namespace 
        run: |
          kubectl create namespace emissary || echo "Namespace already exists"

      - name: Apply Emissary CRDs
        run: |
          kubectl apply -f https://app.getambassador.io/yaml/emissary/3.9.1/emissary-crds.yaml
          kubectl wait --timeout=90s --for=condition=available deployment emissary-apiext -n emissary-system
        
          
      - name: Install Emissary-ingress
        run: |
          kubectl apply -f https://app.getambassador.io/yaml/emissary/3.9.1/emissary-emissaryns.yaml
          kubectl -n emissary wait --for condition=available --timeout=90s deploy -lproduct=aes
          
      - name: Configure Emissary-ingress routing
        run: |
          namespace="emissary"          
          kubectl apply -f ./emissary-ingress/listener.yaml -n $namespace
          kubectl apply -f ./emissary-ingress/mappings.yaml -n $namespace        
